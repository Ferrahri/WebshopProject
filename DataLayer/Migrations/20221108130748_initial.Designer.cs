// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20221108130748_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataLayer.Entities.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            Name = "Dell"
                        },
                        new
                        {
                            BrandId = 2,
                            Name = "Sony"
                        },
                        new
                        {
                            BrandId = 3,
                            Name = "Samsung"
                        },
                        new
                        {
                            BrandId = 4,
                            Name = "Bosch"
                        },
                        new
                        {
                            BrandId = 5,
                            Name = "Intel"
                        },
                        new
                        {
                            BrandId = 6,
                            Name = "AMD"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Gaming"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Office"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "SmartHome"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Appliances"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Computer Hardware"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "USA"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Japan"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "South Korea"
                        },
                        new
                        {
                            CountryId = 4,
                            Name = "Germany"
                        },
                        new
                        {
                            CountryId = 5,
                            Name = "China"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProductImageId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProductImageId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            BrandId = 1,
                            CategoryId = 2,
                            CountryId = 1,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(407),
                            Name = "Latitude 5530",
                            Price = 6460f,
                            ProductImageId = 4,
                            ProductTypeId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            BrandId = 6,
                            CategoryId = 5,
                            CountryId = 1,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(442),
                            Name = "Ryzen 5 7700X",
                            Price = 3499f,
                            ProductImageId = 2,
                            ProductTypeId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            BrandId = 5,
                            CategoryId = 5,
                            CountryId = 1,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(444),
                            Name = "i5 13700K",
                            Price = 3300f,
                            ProductImageId = 3,
                            ProductTypeId = 4
                        },
                        new
                        {
                            ProductId = 4,
                            BrandId = 3,
                            CategoryId = 4,
                            CountryId = 3,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(445),
                            Name = "EcoBubble",
                            Price = 5999f,
                            ProductImageId = 6,
                            ProductTypeId = 6
                        },
                        new
                        {
                            ProductId = 5,
                            BrandId = 4,
                            CategoryId = 4,
                            CountryId = 4,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(447),
                            Name = "Serie 6 ProAnimal",
                            Price = 2100f,
                            ProductImageId = 5,
                            ProductTypeId = 5
                        },
                        new
                        {
                            ProductId = 6,
                            BrandId = 2,
                            CategoryId = 4,
                            CountryId = 2,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(448),
                            Name = "Bravia XR",
                            Price = 13999f,
                            ProductImageId = 1,
                            ProductTypeId = 2
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.ProductImage", b =>
                {
                    b.Property<int>("ProductImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductImageId"), 1L, 1);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductImageId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductImageId = 1,
                            Caption = "Sony Bravia XR",
                            ImagePath = "C:\\Users\\Rene\\source\\repos\\WebshopProject\\BlazorWebApp\\wwwroot\\img\\sony_bravia_xr.jpg"
                        },
                        new
                        {
                            ProductImageId = 2,
                            Caption = "AMD Ryzen 5 7700X",
                            ImagePath = "C:\\Users\\Rene\\source\\repos\\WebShopProject\\WebApp\\wwwroot\\img\\ryzen_7700x.jpg"
                        },
                        new
                        {
                            ProductImageId = 3,
                            Caption = "Intel i7 13700K",
                            ImagePath = "C:\\Users\\Rene\\source\\repos\\WebShopProject\\WebApp\\wwwroot\\img\\i7_13700k.jpg"
                        },
                        new
                        {
                            ProductImageId = 4,
                            Caption = "Dell Latitude 5530",
                            ImagePath = "C:\\Users\\Rene\\source\\repos\\WebShopProject\\WebApp\\wwwroot\\img\\latitude_5530.jpg"
                        },
                        new
                        {
                            ProductImageId = 5,
                            Caption = "Bosch Serie 6",
                            ImagePath = "C:\\Users\\Rene\\source\\repos\\WebShopProject\\WebApp\\wwwroot\\img\\bosch_serie_6.jpg"
                        },
                        new
                        {
                            ProductImageId = 6,
                            Caption = "Samsung EcoBubble",
                            ImagePath = "C:\\Users\\Rene\\source\\repos\\WebShopProject\\WebApp\\wwwroot\\img\\samsung_ecobubble.jpg"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            ProductTypeId = 1,
                            Name = "Laptop"
                        },
                        new
                        {
                            ProductTypeId = 2,
                            Name = "TV"
                        },
                        new
                        {
                            ProductTypeId = 3,
                            Name = "AMD Processor"
                        },
                        new
                        {
                            ProductTypeId = 4,
                            Name = "Intel Processor"
                        },
                        new
                        {
                            ProductTypeId = 5,
                            Name = "Vacuum Cleaner"
                        },
                        new
                        {
                            ProductTypeId = 6,
                            Name = "Washing Machine"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(525),
                            Email = "jj123@test.com",
                            IsActive = true,
                            IsAdmin = false,
                            Name = "Jack",
                            Password = "jj123",
                            PhoneNumber = 123456789,
                            Surname = "Johnson",
                            UserName = "jjshopper"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(528),
                            Email = "rene488@test.com",
                            IsActive = true,
                            IsAdmin = true,
                            Name = "Rene",
                            Password = "rdp123",
                            PhoneNumber = 987654321,
                            Surname = "du Preez",
                            UserName = "rene488"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedDate = new DateTime(2022, 11, 8, 14, 7, 47, 907, DateTimeKind.Local).AddTicks(530),
                            Email = "emma30h@test.com",
                            IsActive = false,
                            IsAdmin = false,
                            Name = "Emma",
                            Password = "eh123",
                            PhoneNumber = 918273645,
                            Surname = "Holm",
                            UserName = "emma30h"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Product", b =>
                {
                    b.HasOne("DataLayer.Entities.Brand", "Brand")
                        .WithMany("Product")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Country", "Country")
                        .WithMany("Products")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.ProductImage", "ProductImages")
                        .WithMany("Product")
                        .HasForeignKey("ProductImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.ProductType", "ProductType")
                        .WithMany("Product")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Country");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("DataLayer.Entities.Brand", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataLayer.Entities.Country", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DataLayer.Entities.ProductImage", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataLayer.Entities.ProductType", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
